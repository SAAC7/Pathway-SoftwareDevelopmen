-- MySQL Script generated by MySQL Workbench
-- s√°b 24 may 2025 16:10:46
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema movie_database
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `movie_database` ;

-- -----------------------------------------------------
-- Schema movie_database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movie_database` ;
USE `movie_database` ;

-- -----------------------------------------------------
-- Table `movie_database`.`studio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`studio` (
  `studio_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`studio_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`movie` (
  `movie_id` INT NOT NULL,
  `studio_studio_id` INT NOT NULL,
  `title` VARCHAR(60) NULL,
  `raiting` ENUM('G', 'PG', 'PG-13', 'R') NULL,
  `year` INT NULL,
  PRIMARY KEY (`movie_id`),
  INDEX `fk_movie_studio1_idx` (`studio_studio_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_studio1`
    FOREIGN KEY (`studio_studio_id`)
    REFERENCES `movie_database`.`studio` (`studio_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`actor` (
  `actor_id` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`cast`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`cast` (
  `movie_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `actor_id`),
  INDEX `fk_cast_actor1_idx` (`actor_id` ASC) VISIBLE,
  CONSTRAINT `fk_cast_movie`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movie_database`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cast_actor1`
    FOREIGN KEY (`actor_id`)
    REFERENCES `movie_database`.`actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`Genre` (
  `Genre_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`media_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`media_type` (
  `media_type_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`media_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`movie_has_media_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`movie_has_media_type` (
  `movie_movie_id` INT NOT NULL,
  `media_type_media_type_id` INT NOT NULL,
  `price` DECIMAL(10,2) NULL,
  PRIMARY KEY (`movie_movie_id`, `media_type_media_type_id`),
  INDEX `fk_movie_has_media_type_media_type1_idx` (`media_type_media_type_id` ASC) VISIBLE,
  INDEX `fk_movie_has_media_type_movie1_idx` (`movie_movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_has_media_type_movie1`
    FOREIGN KEY (`movie_movie_id`)
    REFERENCES `movie_database`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_has_media_type_media_type1`
    FOREIGN KEY (`media_type_media_type_id`)
    REFERENCES `movie_database`.`media_type` (`media_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`movie_has_Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`movie_has_Genre` (
  `movie_movie_id` INT NOT NULL,
  `Genre_Genre_id` INT NOT NULL,
  PRIMARY KEY (`movie_movie_id`, `Genre_Genre_id`),
  INDEX `fk_movie_has_Genre_Genre1_idx` (`Genre_Genre_id` ASC) VISIBLE,
  INDEX `fk_movie_has_Genre_movie1_idx` (`movie_movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_has_Genre_movie1`
    FOREIGN KEY (`movie_movie_id`)
    REFERENCES `movie_database`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_has_Genre_Genre1`
    FOREIGN KEY (`Genre_Genre_id`)
    REFERENCES `movie_database`.`Genre` (`Genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`features`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`features` (
  `features_id` INT NOT NULL,
  `features` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`features_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie_database`.`movie_has_features`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movie_database`.`movie_has_features` (
  `movie_movie_id` INT NOT NULL,
  `features_features_id` INT NOT NULL,
  PRIMARY KEY (`movie_movie_id`, `features_features_id`),
  INDEX `fk_movie_has_features_features1_idx` (`features_features_id` ASC) VISIBLE,
  INDEX `fk_movie_has_features_movie1_idx` (`movie_movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_has_features_movie1`
    FOREIGN KEY (`movie_movie_id`)
    REFERENCES `movie_database`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_has_features_features1`
    FOREIGN KEY (`features_features_id`)
    REFERENCES `movie_database`.`features` (`features_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
